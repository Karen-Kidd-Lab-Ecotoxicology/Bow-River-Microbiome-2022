rownames(metadata) <- n3
#View(metadata) #sample names are now row names
#Combining phyloseq object
ASVtable = otu_table(ASVtable, taxa_are_rows = TRUE) #Taxa are rows means that the ASVs of each identified microbe are the row names which we made sure was true
taxa_table = tax_table(taxa_table)
#Make sure the ASV table and taxa table are both matricies before trying to turn into phyloseq object
ps <- phyloseq(ASVtable, sample_data(metadata), taxa_table)
ps #31,556 taxa, 380 samples
#Need to remove PMF adult caddis because they were contaminated with contaminated laboratory reagents.
samples_to_remove<-c("POLFLT_1_Ad_Caddis_MB_1", "POLFLT_1_Ad_Caddis_MB_2", "POLFLT_1_Ad_Caddis_MB_3", "POLFLT_1_Ad_Caddis_MB_4", "POLFLT_1_Ad_Caddis_MB_5", "POLFLT_1_Ad_Caddis_MB_6", "POLFLT_1_Ad_Caddis_MB_7", "POLFLT_1_Ad_Caddis_MB_8")
ps_pruned<-subset_samples(ps, !(Sample_ID %in% samples_to_remove))
ps_pruned<-prune_taxa(taxa_sums(ps_pruned) > 0, ps_pruned)
ps_pruned #31,185 taxa, 372 samples
#Subset only experimental samples
psexp<-subset_samples(ps_pruned, Sample_Type == "Sample") #Removing ASVs where the abundance is 0 (after removing the blank samples)
psexp<-prune_taxa(taxa_sums(psexp) > 0, psexp)
psexp #30,218 taxa and 349 samples
#Removing Eukaryotes, NAs, Archaea
ps0 <- subset_taxa(psexp, Kingdom == "Bacteria")
ntaxa(psexp)-ntaxa(ps0) #Got rid of 40 ASVs
#Removing low confidence data (where phylum could not be assigned)
ps1<-subset_taxa(ps0, !is.na(Phylum)) #Removes the phyla characterized as NA
ntaxa(ps0) - ntaxa(ps1) #Got rid of 403 ASVs
#Remove Chloroplasts and Mitochondria
ps2<-subset_taxa(ps1, !Order %in% c("","Chloroplast") & !Family %in% c("", "Mitochondria"))
ntaxa(ps1) - ntaxa(ps2) #Got rid of 1824 ASVs
ps3<-ps_prune(ps2, min.reads = 5, min.samples = 2) #Creates an other category that needs to be removed
others = c("Others")
allTaxa = taxa_names(ps3)
allTaxa <- allTaxa[!(allTaxa %in% others)] #removes others from taxa names
ps3 = prune_taxa(allTaxa, ps3)
ps3 #8,422, 349 samples
sample_ps <- subset_samples(ps3, sample_sums(ps3) > 2000)
sample_ps<-prune_taxa(taxa_sums(sample_ps) > 0, sample_ps)
sort(sample_sums(sample_ps)) #Minimum sampling depth is now 2010 reads.
sample_ps #8419 taxa, 331 samples.
total_reads_final <- taxa_sums(sample_ps)
print(sum(total_reads_final)) #Total number of reads is now 10,563,362.
#Normalize the filtered data by relative abundance
Bow_ps<-subset_samples(sample_ps, Stream_Type=="Bow River")
Bow_rel_abun  = transform_sample_counts(Bow_ps, function(x) x/sum(x))
Bow_bray = phyloseq::distance(Bow_rel_abun, method="bray") #Bray Curtis distance matrix
ord_Bow = ordinate(Bow_rel_abun, method="PCoA", distance=Bow_bray) #Ordinate using PCoA
#Scree plot of PCoA
scree <- plot_scree(ord_Bow)
scree + theme(axis.text.x=element_text(size=8, color="black"), axis.text.y=element_text(size=18, color="black"),
axis.text=element_text(size=18, color="black"), axis.title=element_text(size=18))
metadata_Bow <- data.frame(sample_data(Bow_rel_abun))
hydro_Bow<-subset_samples(Bow_ps, Family=="Hydropsychidae")
Bow_rel_abun_hydro  = transform_sample_counts(hydro_Bow, function(x) x/sum(x))
Bow_bray_hydro = phyloseq::distance(Bow_rel_abun_hydro, method="bray")
metadata_Bow_hydro <- data.frame(sample_data(Bow_rel_abun_hydro))
test.adonis.Bow.hydro <- adonis2(Bow_bray_hydro ~ Site, data = metadata_Bow_hydro)
test.adonis.Bow.hydro #p<0.001
#Pairwise comparisons
pairwise.adonis2(Bow_bray_hydro ~ Site, data = metadata_Bow_hydro)
hep_Bow<-subset_samples(Bow_ps, Family=="Heptageniidae")
Bow_rel_abun_hep  = transform_sample_counts(hep_Bow, function(x) x/sum(x))
Bow_bray_hep = phyloseq::distance(Bow_rel_abun_hep, method="bray")
metadata_Bow_hep <- data.frame(sample_data(Bow_rel_abun_hep))
test.adonis.Bow.hep <- adonis2(Bow_bray_hep ~ Site, data = metadata_Bow_hep)
test.adonis.Bow.hep #p<0.001.
#Pairwise comparisons
pairwise.adonis2(Bow_bray_hep ~ Site, data = metadata_Bow_hep)
chiro_Bow<-subset_samples(Bow_ps, Family=="Chironomidae")
Bow_rel_abun_chiro  = transform_sample_counts(chiro_Bow, function(x) x/sum(x))
Bow_bray_chiro = phyloseq::distance(Bow_rel_abun_chiro, method="bray")
metadata_Bow_chiro <- data.frame(sample_data(Bow_rel_abun_chiro))
test.adonis.Bow.chiro <- adonis2(Bow_bray_chiro ~ Site, data = metadata_Bow_chiro)
test.adonis.Bow.chiro #p=0.091.
#Pairwise comparisons
pairwise.adonis2(Bow_bray_chiro ~ Site, data = metadata_Bow_chiro)
test.adonis.Bow.chiro <- adonis2(Bow_bray_chiro ~ Site, data = metadata_Bow_chiro)
test.adonis.Bow.chiro #p=0.07.
perl_Bow<-subset_samples(Bow_ps, Family=="Perlidae")
Bow_rel_abun_perl  = transform_sample_counts(perl_Bow, function(x) x/sum(x))
Bow_bray_perl = phyloseq::distance(Bow_rel_abun_perl, method="bray")
metadata_Bow_perl <- data.frame(sample_data(Bow_rel_abun_perl))
test.adonis.Bow.perl <- adonis2(Bow_bray_perl ~ Site, data = metadata_Bow_perl)
test.adonis.Bow.perl #p<0.001.
#Pairwise comparisons
pairwise.adonis2(Bow_bray_perl ~ Site, data = metadata_Bow_perl)
trichop_Bow<-subset_samples(Bow_ps, Family=="Trichoptera")
Bow_rel_abun_trichop  = transform_sample_counts(trichop_Bow, function(x) x/sum(x))
Bow_bray_trichop = phyloseq::distance(Bow_rel_abun_trichop, method="bray")
metadata_Bow_trichop <- data.frame(sample_data(Bow_rel_abun_trichop))
test.adonis.Bow.trichop <- adonis2(Bow_bray_trichop ~ Site, data = metadata_Bow_trichop)
test.adonis.Bow.trichop #p = 0.021
#Pairwise comparisons
pairwise.adonis2(Bow_bray_trichop ~ Site, data = metadata_Bow_trichop)
ephem_Bow<-subset_samples(Bow_ps, Family=="Ephemeroptera")
Bow_rel_abun_ephem = transform_sample_counts(ephem_Bow, function(x) x/sum(x))
Bow_bray_ephem = phyloseq::distance(Bow_rel_abun_ephem, method="bray")
metadata_Bow_ephem <- data.frame(sample_data(Bow_rel_abun_ephem))
test.adonis.Bow.ephem <- adonis2(Bow_bray_ephem ~ Site, data = metadata_Bow_ephem)
test.adonis.Bow.ephem #p < 0.001
#Pairwise comparisons
pairwise.adonis2(Bow_bray_ephem ~ Site, data = metadata_Bow_ephem)
## Diptera ##
dip_Bow<-subset_samples(Bow_ps, Family=="Diptera")
Bow_rel_abun_dip = transform_sample_counts(dip_Bow, function(x) x/sum(x))
Bow_bray_dip = phyloseq::distance(Bow_rel_abun_dip, method="bray")
metadata_Bow_dip <- data.frame(sample_data(Bow_rel_abun_dip))
test.adonis.Bow.dip <- adonis2(Bow_bray_dip ~ Site, data = metadata_Bow_dip)
test.adonis.Bow.dip #p = 0.162
#Pairwise comparisons
pairwise.adonis2(Bow_bray_dip ~ Site, data = metadata_Bow_dip)
aran_Bow<-subset_samples(Bow_ps, Family=="Araneidae")
Bow_rel_abun_aran = transform_sample_counts(aran_Bow, function(x) x/sum(x))
Bow_bray_aran = phyloseq::distance(Bow_rel_abun_aran, method="bray")
metadata_Bow_aran <- data.frame(sample_data(Bow_rel_abun_aran))
test.adonis.Bow.aran <- adonis2(Bow_bray_aran ~ Site, data = metadata_Bow_aran)
test.adonis.Bow.aran #p < 0.001
#Pairwise comparisons
pairwise.adonis2(Bow_bray_aran ~ Site, data = metadata_Bow_aran)
tetra_Bow<-subset_samples(Bow_ps, Family=="Tetragnathidae")
Bow_rel_abun_tetra = transform_sample_counts(tetra_Bow, function(x) x/sum(x))
Bow_bray_tetra = phyloseq::distance(Bow_rel_abun_tetra, method="bray")
metadata_Bow_tetra <- data.frame(sample_data(Bow_rel_abun_tetra))
test.adonis.Bow.tetra <- adonis2(Bow_bray_tetra ~ Site, data = metadata_Bow_tetra)
test.adonis.Bow.tetra #p = 0.574
#Pairwise comparisons
pairwise.adonis2(Bow_bray_tetra ~ Site, data = metadata_Bow_tetra)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#Change margin size to be smaller so graphs fit in the plot panel
par(mar = c(2, 2, 2, 2)) # Set the margin on all sides to 2
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
par(mar = c(1, 1, 1, 1))
library(rjags)
library(MixSIAR)
library(plyr)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(R2WinBUGS)
library(FSA)
library(splancs)
library(devtools)
library(emmeans)
library(vegan)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", force=TRUE)
library(pairwiseAdonis)
library(ggpubr)
isotope<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\stable_isotope_analysis\\StableIsotope2022.csv")
isotope$Site<-factor(isotope$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
isotope$Aqu_Terr<-factor(isotope$Aqu_Terr, levels=c("Leaves", "biofilm", "lar_aquatic", "Ad_aquatic", "Terrestrial", "Spider"), labels=c("Riparian Leaves", "Biofilm", "Aquatic Larvae", "Aquatic Adults", "Terrestrial Prey", "Spiders"))
inverts<-subset(isotope, Tissue.Type=="Whole Invertebrate")
#Summarizing a dataframe with mean and sd C and N values
data.sum<-ddply(isotope, c("Site", "Taxa", "FFG"), summarise,
d13Cmn=mean(d13C), #mean
d13Csd=sd(d13C), #standard deviation
d15Nmn=mean(d15N), #mean
d15Nsd=sd(d15N)) #standard deviation
#Making errorbars
Ylims<-aes(ymax=d15Nmn +d15Nsd, ymin=d15Nmn-d15Nsd)
Xlims<-aes(xmax=d13Cmn+d13Csd, xmin=d13Cmn-d13Csd)
#All sites together
ggplot(data.sum, aes(x=d13Cmn, y=d15Nmn, colour=Taxa, shape=FFG))+
geom_point(size=3)+
geom_errorbar(Ylims, width=0.2)+
geom_errorbarh(Xlims, height=0.2)+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
xlab(expression(paste(delta^13, "C (\u2030)", sep="")))+
theme_classic()
#Sites faceted
data.sum$Taxa<-factor(data.sum$Taxa, levels= c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Leptoceridae", "Ephemerellidae", "Chironomidae", "Heptageniidae", "Lepidoptera", "Chloroperlidae", "Perlidae", "Coleoptera", "Rhyacophilidae", "Araneidae", "Tetragnathidae"), labels=c("Riparian Leaves", "Biofilm", "Hydropsychidae", "Leptoceridae", "Ephemerellidae", "Chironomidae", "Heptageniidae", "Lepidoptera", "Chloroperlidae", "Perlidae", "Coleoptera", "Rhyacophilidae", "Araneidae", "Tetragnathidae"))
ggplot(data.sum, aes(x=d13Cmn, y=d15Nmn, colour=Taxa, shape=FFG))+
geom_point(size=3)+
geom_errorbar(Ylims, width=0.2)+
geom_errorbarh(Xlims, height=0.2)+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
xlab(expression(paste(delta^13, "C (\u2030)", sep="")))+
facet_grid(.~Site)+
theme_bw()+
theme(axis.text = element_text(size=12, color="black"), axis.title = element_text(size=16), strip.text = element_text(size=16, color="black"), legend.title = element_text(size=14), legend.text = element_text(size=12))+
labs(color="Taxa", shape="Sample Type")+
rremove("grid")
#ggsave(filename="stable_isotope_analysis/Figures/Mean SD biplot d13C d15N faceted by site.png", height=7, width=12)
N_plot<-ggplot(isotope, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x = element_text(size=16, angle = 45, vjust=1.0, hjust=1, color="black"))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_grid(~Aqu_Terr, scales="free_x")
N_plot
View(isotope)
hydro_subset<-subset(isotope, Taxa == c("Tetragnathidae", "Araneidae", "Terrestrial Leaves", "Hydropsychidae", "Biofilm"))
View(hydro_subset)
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae") #, "Terrestrial Leaves", "Hydropsychidae", "Biofilm"))
View(hydro_subset)
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm"))
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetrangathidae"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x = element_text(size=16, angle = 45, vjust=1.0, hjust=1, color="black"))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_grid(~Taxa, scales="free_x")
N_plot_hydro
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x = element_text(size=16, angle = 45, vjust=1.0, hjust=1, color="black"))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_grid(~Taxa, scales="free_x")
N_plot_hydro
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x = element_text(size=16, angle = 45, vjust=1.0, hjust=1, color="black"))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_grid(~Taxa, scales="free_x")
N_plot_hydro
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x = element_text(size=16, angle = 45, vjust=1.0, hjust=1, color="black"))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(Aqu_Terr+Taxa, scales="free_x")
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x = element_text(size=16, angle = 45, vjust=1.0, hjust=1, color="black"))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x")
N_plot_hydro
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x = element_text(size=16, angle = 45, vjust=1.0, hjust=1, color="black"))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
ggsave(filename="C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Conferences and Presentations\\Graduate Research Day 2024\\nitrogen_across_taxa.png", height=7, width=12)
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF")))+
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF")), y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
View(isotope)
hydro_subset$Taxa <- factor(hydro_subset$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"), labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site <- factor(hydro_subset$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"), labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=factor(Site, y=d15N))+
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site <- factor(hydro_subset$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"), labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
hydro_subset$Site <- factor(hydro_subset$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"), labels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("Graves Bridge", "Policeman Flats"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("Graves Bridge", "Policeman Flats"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
library(rjags)
library(MixSIAR)
library(plyr)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(R2WinBUGS)
library(FSA)
library(splancs)
library(devtools)
library(emmeans)
library(vegan)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", force=TRUE)
library(pairwiseAdonis)
library(ggpubr)
isotope<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\stable_isotope_analysis\\StableIsotope2022.csv")
isotope$Site<-factor(isotope$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
isotope$Aqu_Terr<-factor(isotope$Aqu_Terr, levels=c("Leaves", "biofilm", "lar_aquatic", "Ad_aquatic", "Terrestrial", "Spider"), labels=c("Riparian Leaves", "Biofilm", "Aquatic Larvae", "Aquatic Adults", "Terrestrial Prey", "Spiders"))
inverts<-subset(isotope, Tissue.Type=="Whole Invertebrate")
View(inverts)
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site_Code <- factor(hydro_subset$Site_Code, levels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site_Code, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site_Code <- factor(hydro_subset$Site_Code, levels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site_Code, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site_Code <- factor(hydro_subset$Site_Code, levels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site_Code, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site_Code, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
ggsave(filename="C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Conferences and Presentations\\Graduate Research Day 2024\\nitrogen_across_taxa.png", height=7, width=12)
