for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("Graves Bridge", "Policeman Flats"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
library(rjags)
library(MixSIAR)
library(plyr)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(R2WinBUGS)
library(FSA)
library(splancs)
library(devtools)
library(emmeans)
library(vegan)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", force=TRUE)
library(pairwiseAdonis)
library(ggpubr)
isotope<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\stable_isotope_analysis\\StableIsotope2022.csv")
isotope$Site<-factor(isotope$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
isotope$Aqu_Terr<-factor(isotope$Aqu_Terr, levels=c("Leaves", "biofilm", "lar_aquatic", "Ad_aquatic", "Terrestrial", "Spider"), labels=c("Riparian Leaves", "Biofilm", "Aquatic Larvae", "Aquatic Adults", "Terrestrial Prey", "Spiders"))
inverts<-subset(isotope, Tissue.Type=="Whole Invertebrate")
View(inverts)
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site_Code <- factor(hydro_subset$Site_Code, levels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site_Code, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site_Code <- factor(hydro_subset$Site_Code, levels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site_Code, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
colorado <- function(src, boulder) {
if (!is.factor(src)) src <- factor(src)                   # make sure it's a factor
src_levels <- levels(src)                                 # retrieve the levels in their order
brave <- boulder %in% src_levels                          # make sure everything we want to make bold is actually in the factor levels
if (any(brave)){
b_pos <- which(src_levels == boulder[1])
for(i in 2:length(boulder)){# if so
# then find out where they are
b_pos <- append(b_pos, which(src_levels == boulder[i]))
}
b_vec <- rep("plain", length(src_levels))               # make'm all plain first
b_vec[b_pos] <- "bold"# make our targets bold
b_vec
# return the new vector
}
}
hydro_subset<-subset(isotope, Taxa == "Tetragnathidae" | Taxa== "Araneidae" | Taxa=="Terrestrial Leaves" | Taxa=="Hydropsychidae" | Taxa=="Biofilm")
hydro_subset$Taxa <- factor(hydro_subset$Taxa, levels=c("Terrestrial Leaves", "Biofilm", "Hydropsychidae", "Araneidae", "Tetragnathidae"))
hydro_subset$Site_Code <- factor(hydro_subset$Site_Code, levels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF"))
N_plot_hydro<-ggplot(hydro_subset, aes(x=Site_Code, y=d15N))+
geom_boxplot()+
theme_bw()+
ylab(expression(paste(delta^15, "N (\u2030)", sep="")))+
theme(axis.title.y.left = element_text(size=18), axis.title.x = element_text(size=18), axis.text.x=element_text(angle=45, hjust=1, size=16, color="black", face=colorado(hydro_subset$Site_Code, c("GRVBR", "PMF"))))+
ylim(-1, 17)+
rremove("grid")+
xlab("Site")+
facet_wrap(~Aqu_Terr+Taxa, scales="free_x", nrow=1)
N_plot_hydro
ggsave(filename="C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Conferences and Presentations\\Graduate Research Day 2024\\nitrogen_across_taxa.png", height=7, width=12)
library(rjags)
library(MixSIAR)
library(plyr)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(R2WinBUGS)
library(FSA)
library(splancs)
library(devtools)
library(emmeans)
library(vegan)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", force=TRUE)
library(pairwiseAdonis)
library(ggpubr)
isotope<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\stable_isotope_analysis\\StableIsotope2022.csv")
isotope$Site<-factor(isotope$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
isotope$Aqu_Terr<-factor(isotope$Aqu_Terr, levels=c("Leaves", "biofilm", "lar_aquatic", "Ad_aquatic", "Terrestrial", "Spider"), labels=c("Riparian Leaves", "Biofilm", "Aquatic Larvae", "Aquatic Adults", "Terrestrial Prey", "Spiders"))
inverts<-subset(isotope, Tissue.Type=="Whole Invertebrate")
terr_ad<-subset(isotope, Aqu_Terr=="Terrestrial Prey")
shapiro.test(terr_ad$d13C) #normal dist.
hist(terr_ad$d13C)
summary(terr_ad_aov<-aov(d13C~Site, data=terr_ad)) #p=0.0247
emmeans(terr_ad_aov, specs = pairwise ~ Site)
C_taxa<-aov(d13C~Aqu_Terr, data=isotope)
summary(C_taxa)
emmeans(C_taxa)
emmeans(C_taxa, specs = pairwise~Aqu_Terr)
shapiro.test(isotope$d13C) #normal
C_taxa<-aov(d13C~Aqu_Terr*Site, data=isotope)
summary(C_taxa)
emmeans(C_taxa, specs = pairwise~Aqu_Terr)
summary(biofilm1<-aov(d13C~Site, data=biofilm)) #p=0.00445
#### Biofilm ####
biofilm<-subset(isotope, Taxa=="Biofilm")
summary(biofilm1<-aov(d13C~Site, data=biofilm)) #p=0.00445
emmeans(biofilm1, specs = pairwise~Site)
#### Riparian Leaves ####
shrub<-subset(isotope, Stage=="Shrub")
summary(shrublm1<-aov(d13C~Site, data=shrub)) #p =0.323 no diff.
emmeans(shrublm1, specs = pairwise~Site) # no differences across sites
shapiro.test(isotope$d13C) #not normal
emmeans(C_taxa, specs = pairwise~Aqu_Terr*Site)
coch<-subset(isotope, Site=="Cochrane")
coch_C_taxa<-aov(d13C~Aqu_Terr, data=coch)
shapiro.test(coch$d13C)
leveneTest(d13C~Aqu_Terr, data=coch)
library(car)
leveneTest(d13C~Aqu_Terr, data=coch)
coch_C_taxa<-aov(d13C~Aqu_Terr, data=coch)
summary(coch_C_taxa<-aov(d13C~Aqu_Terr, data=coch))
emmeans(coch_C_taxa, specs = pairwise~Site)
emmeans(coch_C_taxa, specs = pairwise~Aqu_Terr)
kruskal.test(d13C~Aqu_Terr, data=coch)
dunnTest(d13C~Aqu_Terr, data=coch)
summary(coch_C_taxa<-aov(d13C~Taxa, data=coch)) #P<0.001
emmeans(coch_C_taxa, specs = pairwise~Taxa) #No diff between spiders and aquatic adults or terrestrial insects
summary(coch_C_taxa<-aov(d13C~Taxa*Stage, data=coch)) #P<0.001
emmeans(coch_C_taxa, specs = pairwise~Taxa*Stage) #No diff between spiders and aquatic adults or terrestrial insects
coch_res<-emmeans(coch_C_taxa, specs = pairwise~Taxa*Stage) #
View(coch_res)
coch_res<-data.frame(emmeans(coch_C_taxa, specs = pairwise~Taxa*Stage)) #
View(coch_res)
coch_res<-data.frame(emmeans(coch_C_taxa, specs = pairwise~Taxa*Stage, na.omit())) #
coch_res<-na.omit(coch_res)
View(coch_res)
summary(coch_C_taxa<-aov(d13C~Taxa*Stage, data=coch)) #P<0.001
coch_res<-data.frame(emmeans(coch_C_taxa, specs = pairwise~Taxa*Stage))
coch_res_pv = unlist(lapply(unlist(coch_res), function(x) as.data.frame(x)$p.value))
pairs(emmeans(coch_C_taxa, ~ Taxa*Stage), simple = "each", combine = TRUE, adjust = "bonferroni")
coch_res<-data.frame(pairs(emmeans(coch_C_taxa, ~ Taxa*Stage), simple = "each", combine = TRUE, adjust = "bonferroni"))
coch_res<-na.omit(coch_res)
View(coch_res)
summary(coch_C_taxa<-aov(d13C~Taxa*Stage, data=coch)) #P<0.001
coch_res<-data.frame(pairs(emmeans(coch_C_taxa, ~ Taxa*Stage), simple = "each", combine = F, adjust = "bonferroni"))
coch_res<-na.omit(coch_res)
coch_res<-data.frame(pairs(emmeans(coch_C_taxa, ~ Taxa*Stage), simple = "each", combine = F, adjust = "bonferroni"))
coch_res<-na.omit(coch_res)
View(coch_res)
coch_res<-data.frame(pairs(emmeans(coch_C_taxa, ~ Taxa*Stage), combine = TRUE, adjust = "bonferroni"))
coch_res<-na.omit(coch_res)
View(coch_res)
summary(coch_C_taxa<-aov(d13C~Taxa*Stage, data=coch)) #P<0.001
library(rjags)
library(MixSIAR)
library(plyr)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(R2WinBUGS)
library(FSA)
library(splancs)
library(devtools)
library(emmeans)
library(vegan)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", force=TRUE)
library(pairwiseAdonis)
library(ggpubr)
isotope<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\stable_isotope_analysis\\StableIsotope2022.csv")
isotope$Site<-factor(isotope$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
isotope$Aqu_Terr<-factor(isotope$Aqu_Terr, levels=c("Leaves", "biofilm", "lar_aquatic", "Ad_aquatic", "Terrestrial", "Spider"), labels=c("Riparian Leaves", "Biofilm", "Aquatic Larvae", "Aquatic Adults", "Terrestrial Prey", "Spiders"))
inverts<-subset(isotope, Tissue.Type=="Whole Invertebrate")
coch<-subset(isotope, Site=="Cochrane")
shapiro.test(coch$d13C) #Not normal
#library(car)
leveneTest(d13C~Taxa_Specific, data=coch) #homogeneity p=0.084
C_taxa<-aov(d13C~Taxa_Specific*Site, data=isotope)
summary(C_taxa)
emmeans(C_taxa, specs = pairwise~Aqu_Terr*Site)
emmeans(C_taxa, specs = pairwise~Taxa_Specific*Site)
summary(C_taxa<-aov(d13C~Taxa_Specific*Site, data=isotope))
taxa_res<-data.frame(pairs(emmeans(C_taxa, ~ Taxa_Specific*Site), combine = TRUE, adjust = "bonferroni"))
taxa_res<-na.omit(coch_res)
View(taxa_res)
summary(C_taxa<-aov(d13C~Taxa_Specific*Site, data=isotope))
taxa_res<-data.frame(pairs(emmeans(C_taxa, ~ Taxa_Specific*Site), combine = TRUE, adjust = "bonferroni"))
taxa_res<-na.omit(taxa_res)
View(taxa_res)
coch<-subset(isotope, Site=="Cochrane")
summary(coch_taxa<-aov(d13C~Taxa_Specific*Site, data=coch))
coch_res<-data.frame(pairs(emmeans(coch_taxa, ~ Taxa_Specific*Site), combine = TRUE, adjust = "bonferroni"))
coch_res<-na.omit(coch_res)
summary(coch_taxa<-aov(d13C~Taxa_Specific*Site, data=coch))
coch<-subset(isotope, Site=="Cochrane")
summary(coch_taxa<-aov(d13C~Taxa_Specific, data=coch))
coch_res<-data.frame(pairs(emmeans(coch_taxa, ~ Taxa_Specific), combine = TRUE, adjust = "bonferroni"))
coch_res<-na.omit(coch_res)
View(coch_res)
dunnTest(d13C~Taxa_Specific, data=coch)
sun<-subset(isotope, Site=="Sunalta")
shapiro.test(sun$d13C) #Not normal
#library(car)
leveneTest(d13C~Taxa_Specific, data=sun) #homogeneity p=0.336
summary(sun_taxa<-aov(d13C~Taxa_Specific, data=sun))
sun_res<-data.frame(pairs(emmeans(sun_taxa, ~ Taxa_Specific), combine = TRUE, adjust = "bonferroni"))
sun_res<-na.omit(sun_res)
View(sun_res)
kruskal.test(d13C~Taxa_Specific, data=sun)
dunnTest(d13C~Taxa_Specific, data=sun)
shapiro.test(sun$d13C) #Not normal
cush<-subset(isotope, Site=="Cushing Bridge")
shapiro.test(cush$d13C) #Not normal
#library(car)
leveneTest(d13C~Taxa_Specific, data=cush) #homogeneity p=0.555
summary(sun_taxa<-aov(d13C~Taxa_Specific, data=cush))
summary(cush_taxa<-aov(d13C~Taxa_Specific, data=cush))
cush_res<-data.frame(pairs(emmeans(cush_taxa, ~ Taxa_Specific), combine = TRUE, adjust = "bonferroni"))
cush_res<-na.omit(cush_res)
dunnTest(d13C~Taxa_Specific, data=cush)
grvbr<-subset(isotope, Site=="Graves Bridge")
shapiro.test(grvbr$d13C) #Not normal
#library(car)
leveneTest(d13C~Taxa_Specific, data=grvbr) #homogeneity p=0.497
summary(grvbr_taxa<-aov(d13C~Taxa_Specific, data=grvbr))
grvbr_res<-data.frame(pairs(emmeans(grvbr_taxa, ~ Taxa_Specific), combine = TRUE, adjust = "bonferroni"))
grvbr_res<-na.omit(grvbr_res)
kruskal.test(d13C~Taxa_Specific, data=grvbr)
dunnTest(d13C~Taxa_Specific, data=grvbr)
pmf<-subset(isotope, Site=="Policeman Flats")
shapiro.test(pmf$d13C) #Not normal
#library(car)
leveneTest(d13C~Taxa_Specific, data=pmf) #homogeneity p=0.343
summary(pmf_taxa<-aov(d13C~Taxa_Specific, data=pmf))
pmf_res<-data.frame(pairs(emmeans(pmf_taxa, ~ Taxa_Specific), combine = TRUE, adjust = "bonferroni"))
pmf_res<-na.omit(pmf_res)
kruskal.test(d13C~Taxa_Specific, data=pmf)
dunnTest(d13C~Taxa_Specific, data=pmf)
summary(C_taxa<-aov(d13C~Taxa_Specific*Site, data=isotope))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls()) #Clears environment
#Change margin size to be smaller so graphs fit in the plot panel
par(mar = c(2, 2, 2, 2)) # Set the margin on all sides to 2
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("phyloseq")
library(phyloseq) #phyloseq will be the main package used for structuring microbiome data and diversity comparisons
#BiocManager::install("apeglm")
library(apeglm)
#BiocManager::install("microbiome")
library(microbiome) #For microbiome analyses
library(rlang)
library(glue)
library(ggh4x)
library(viridis)
library(geosphere)
library(car)
library(ggplot2) #For creating graphs
library(ggtext)
library(plyr) #if you load this after dpylr it messes up the dplyr functions
library(dplyr) #Helps with data wrangling
library(cluster) #Used for cluster analyses
library(grid)
library(ape)
library(pals)
library(FSA)
library(multcomp)
library(MASS)
library(glmmTMB)
library(gridExtra)
library(vegan)
library(tidyverse) #data wrangling
#BiocManager::install("PERFect")
library(PERFect) #Permutation filtration for microbiome data. Used when comparing beta diversities across sites/locations.
library(knitr) #For R Markdown knitting
library(kableExtra)
#remotes::install_github("mikemc/speedyseq")
library(speedyseq)
library(colorspace)
library(RColorBrewer)
library(picante)
library(ggpubr)
library(data.table)
library(AICcmodavg)
#devtools::install_github("microsud/microbiomeutilities")
library(microbiomeutilities)
library(imsig)
library(phangorn) #For phylogenetic tree
library(metacoder)
library(tibble)
#BiocManager::install("DESeq2")
library(DESeq2)
library(emmeans)
library(devtools)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
#BiocManager::install("mia")
library(mia)
library(factoextra)
#install.packages("microViz", repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos")))
library(microViz)
#remotes::install_github("vmikk/metagMisc")
library(metagMisc)
#BiocManager::install("decontam")
library(decontam)
#BiocManager::install("dada2", version = "3.16") 3.16 with R v 4.2.3, 3.17 with R v 4.3.2
library(dada2)
library(forcats)
library(ggpubr)
#remotes::install_github("kstagaman/phyloseqCompanion")
library(phyloseqCompanion)
#BiocManager::install("ANCOMBC")
library(ANCOMBC)
#devtools::install_github("Russel88/DAtest")
library(DAtest)
#remotes::install_github("Russel88/MicEco", force=T)
library(MicEco)
library(readxl)
library(rdacca.hp) #Used to determine importance of each explanatory variable in RDA
library(GGally) #Used to plot Spearman correlations
library(biomformat)
#install_github("helixcn/seqRFLP")
library(seqRFLP) #Used to save files as .fasta
#Importing ASV table
ASVseq<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\microbiome_analysis\\Raw data\\ASV_data_2022_ED_fulldataset_samplesordered.csv")
#The row names have to be the ASV identifier (genetic barcode) in order for it to be read. The following lines of code are to re-organize the row names
n1 <- ASVseq$X #Currently the ASVs are being called "X" in the first column. We want them to be unnamed in the row names column
ASVseq <- ASVseq[,-1] #This removes the first column of the ASV dataframe
rownames(ASVseq) <- n1 #This moves the ASVs to the rownames column of the dataframe
ASVtable <- as.matrix(ASVseq) #must be a matrix so we convert to a matrix
#View(ASVtable) #The ASVs are now the row names
#Importing taxa table
taxonomy <-read.csv ("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\microbiome_analysis\\Raw data\\Taxonomy_ED_2022_fulldataset.csv")
#Using the same steps as above with the ASV table to make the genetic barcode the rowname
n2 <- taxonomy$X
taxonomy <- taxonomy[,-1]
rownames(taxonomy) <- n2
taxa_table<-as.matrix(taxonomy) #Turn into a matrix
#View(taxa_table) #ASVs are now the row names
#Importing metadata file
metadata<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\microbiome_analysis\\Raw data\\metadata_noKK2078_samples_ordered.csv")
metadata$Site<-factor(metadata$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats", "BRR2", "PCR1", "PCR3")) #Order sites
metadata$Site_code<-factor(metadata$Site_code, levels=c("COCH", "SUN", "CUSHBR", "GRVBR", "PMF", "BRR2", "PCR1", "PCR3")) #Order sites
metadata$Stage<-factor(metadata$Stage, levels=c("Larvae", "Adults", "Spiders"))
#Need to make sample names as row names so we follow the same steps as above.
n3 <- metadata$Study_ID
# move names to row headings
metadata <- metadata[,-1]
rownames(metadata) <- n3
#View(metadata) #sample names are now row names
#Combining phyloseq object
ASVtable = otu_table(ASVtable, taxa_are_rows = TRUE) #Taxa are rows means that the ASVs of each identified microbe are the row names which we made sure was true
taxa_table = tax_table(taxa_table)
#Make sure the ASV table and taxa table are both matricies before trying to turn into phyloseq object
ps <- phyloseq(ASVtable, sample_data(metadata), taxa_table)
ps #31,556 taxa, 380 samples
#Need to remove PMF adult caddis because they were contaminated with contaminated laboratory reagents.
samples_to_remove<-c("POLFLT_1_Ad_Caddis_MB_1", "POLFLT_1_Ad_Caddis_MB_2", "POLFLT_1_Ad_Caddis_MB_3", "POLFLT_1_Ad_Caddis_MB_4", "POLFLT_1_Ad_Caddis_MB_5", "POLFLT_1_Ad_Caddis_MB_6", "POLFLT_1_Ad_Caddis_MB_7", "POLFLT_1_Ad_Caddis_MB_8")
ps_pruned<-subset_samples(ps, !(Sample_ID %in% samples_to_remove))
ps_pruned<-prune_taxa(taxa_sums(ps_pruned) > 0, ps_pruned)
ps_pruned #31,185 taxa, 372 samples
#Subset only experimental samples
psexp<-subset_samples(ps_pruned, Sample_Type == "Sample") #Removing ASVs where the abundance is 0 (after removing the blank samples)
psexp<-prune_taxa(taxa_sums(psexp) > 0, psexp)
psexp #30,218 taxa and 349 samples
#Removing Eukaryotes, NAs, Archaea
ps0 <- subset_taxa(psexp, Kingdom == "Bacteria")
ntaxa(psexp)-ntaxa(ps0) #Got rid of 40 ASVs
#Removing low confidence data (where phylum could not be assigned)
ps1<-subset_taxa(ps0, !is.na(Phylum)) #Removes the phyla characterized as NA
ntaxa(ps0) - ntaxa(ps1) #Got rid of 403 ASVs
#Remove Chloroplasts and Mitochondria
ps2<-subset_taxa(ps1, !Order %in% c("","Chloroplast") & !Family %in% c("", "Mitochondria"))
ntaxa(ps1) - ntaxa(ps2) #Got rid of 1824 ASVs
ps3<-ps_prune(ps2, min.reads = 5, min.samples = 2) #Creates an other category that needs to be removed
others = c("Others")
allTaxa = taxa_names(ps3)
allTaxa <- allTaxa[!(allTaxa %in% others)] #removes others from taxa names
ps3 = prune_taxa(allTaxa, ps3)
ps3 #8,422, 349 samples
sample_ps <- subset_samples(ps3, sample_sums(ps3) > 2000)
sample_ps<-prune_taxa(taxa_sums(sample_ps) > 0, sample_ps)
sort(sample_sums(sample_ps)) #Minimum sampling depth is now 2010 reads.
sample_ps #8419 taxa, 331 samples.
total_reads_final <- taxa_sums(sample_ps)
print(sum(total_reads_final)) #Total number of reads is now 10,563,362.
Bow_ps<-subset_samples(sample_ps, Stream_Type=="Bow River")
Bow_ps<-prune_taxa(taxa_sums(Bow_ps) > 0, Bow_ps)
Bow_ps #276 samples, 7527 taxa
print(sum(taxa_sums(Bow_ps))) #8,547,820
ACWA_ps<-subset_samples(sample_ps, Stream_Type=="ACWA Streams")
ACWA_ps<-prune_taxa(taxa_sums(ACWA_ps) > 0, ACWA_ps)
ACWA_ps #55 samples, 3613 taxa
dip_ps<-subset_samples(sample_ps, Family=="Diptera")
deseq_exposed_dip <- phyloseq_to_deseq2(dip_ps, ~ Exposure)
#Re level the reference variable so that the comparison is exposed vs unexposed
deseq_exposed_dip$Exposure <-relevel(deseq_exposed_dip$Exposure, "Unexposed")
deseq_exposed_dip <- DESeq(deseq_exposed_dip, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_exposed_dip <- results(deseq_exposed_dip, cooksCutoff = FALSE)
alpha = 0.001
sigtab_exposed_dip = res_deseq_exposed_dip[which(res_deseq_exposed_dip$padj < alpha), ]
sigtab_exposed_dip = cbind(as(sigtab_exposed_dip, "data.frame"), as(tax_table(dip_ps)[rownames(sigtab_exposed_dip), ], "matrix"))
x_exposed_dip = tapply(sigtab_exposed_dip$log2FoldChange, sigtab_exposed_dip$Phylum, function(x) max(x))
x_exposed_dip = sort(x_exposed_dip, TRUE)
sigtab_exposed_dip$Phylum = factor(as.character(sigtab_exposed_dip$Phylum), levels=names(x_exposed_dip))
# Genus
x_exposed_dip = tapply(sigtab_exposed_dip$log2FoldChange, sigtab_exposed_dip$Genus, function(x) max(x))
x_exposed_dip = sort(x_exposed_dip, TRUE)
sigtab_exposed_dip$Genus = factor(as.character(sigtab_exposed_dip$Genus), levels=sort(names(x_exposed_dip)))
diff_abund_dip_plot<-ggplot(sigtab_exposed_dip, aes(y=Genus, x=log2FoldChange, color=Phylum))+
geom_point(size=6) +
theme_bw()+
theme(axis.text.y = element_text(size=24, face="italic", color="black")) + theme(axis.text.x=element_text(size=24, color="black"), axis.title=element_text(size=28)) +
theme(legend.text=element_text(size=24, color="black")) +
theme(legend.title = element_text(size=24, color="black"), legend.position="bottom")+
guides(nrow=8)+
rremove("grid")+
labs(y = expression(Log[2]~ "Ratio of Absolute Abundance"))+
scale_color_brewer(palette="Set3")
diff_abund_dip_plot
ggplot(sigtab_exposed_dip, aes(x=log2FoldChange, y=Genus))+
geom_point(size=8) +
theme_bw()+
theme(axis.text.y = element_text(size=40, face="italic", color="black")) + theme(axis.text.x=element_text(size=34, color="black"), axis.title=element_text(size=36)) +
theme(legend.text=element_text(size=34, color="black")) +
theme(legend.title = element_text(size=34, color="black"), legend.position="bottom")+
scale_y_discrete(limits=rev)+
rremove("grid")+
labs(x = expression(Log[2]~ "Ratio of Absolute Abundance"))+
scale_color_brewer(palette = "Set3")
ggsave(filename="microbiome_analysis/Final analysis/Differential Abundance Results/Exposed vs Unexposed sites Chironomidae adults Bow no legend.png", height=20, width=22)
ggplot(sigtab_exposed_dip, aes(x=log2FoldChange, y=Genus))+
geom_point(size=8) +
theme_bw()+
theme(axis.text.y = element_text(size=40, face="italic", color="black")) + theme(axis.text.x=element_text(size=34, color="black"), axis.title=element_text(size=36)) +
theme(legend.text=element_text(size=34, color="black")) +
theme(legend.title = element_text(size=34, color="black"), legend.position="bottom")+
scale_y_discrete(limits=rev)+
rremove("grid")+
labs(x = expression(Log[2]~ "Ratio of Absolute Abundance"))+
scale_color_brewer(palette = "Set3")
ggsave(filename="microbiome_analysis/Final analysis/Differential Abundance Results/Exposed vs Unexposed sites Chironomidae adults Bow no legend.png", height=20, width=22)
ggplot(sigtab_exposed_dip, aes(x=log2FoldChange, y=Genus))+
geom_point(size=8) +
theme_bw()+
theme(axis.text.y = element_text(size=40, face="italic", color="black")) + theme(axis.text.x=element_text(size=34, color="black"), axis.title=element_text(size=36)) +
theme(legend.text=element_text(size=34, color="black")) +
theme(legend.title = element_text(size=34, color="black"), legend.position="bottom")+
scale_y_discrete(limits=rev)+
rremove("grid")+
labs(x = expression(Log[2]~ "Ratio of Absolute Abundance"))+
scale_color_brewer(palette = "Set3")
ggsave(filename="microbiome_analysis/Final analysis/Differential Abundance Results/Exposed vs Unexposed sites Chironomidae adults Bow no legend.png", height=20, width=22)
