alpha = 0.001
sigtab_cushbr_coch_dip = res_deseq_cushbr_coch_dip[which(res_deseq_cushbr_coch_dip$padj < alpha), ]
sigtab_cushbr_coch_dip = cbind(as(sigtab_cushbr_coch_dip, "data.frame"), as(tax_table(dip_cushbr_coch)[rownames(sigtab_cushbr_coch_dip), ], "matrix"))
x_cushbr_coch_dip = tapply(sigtab_cushbr_coch_dip$log2FoldChange, sigtab_cushbr_coch_dip$Phylum, function(x) max(x))
x_cushbr_coch_dip = sort(x_cushbr_coch_dip, TRUE)
sigtab_cushbr_coch_dip$Phylum = factor(as.character(sigtab_cushbr_coch_dip$Phylum), levels=names(x_cushbr_coch_dip))
# Genus
x_cushbr_coch_dip = tapply(sigtab_cushbr_coch_dip$log2FoldChange, sigtab_cushbr_coch_dip$Genus, function(x) max(x))
x_cushbr_coch_dip = sort(x_cushbr_coch_dip, TRUE)
sigtab_cushbr_coch_dip$Genus = factor(as.character(sigtab_cushbr_coch_dip$Genus), levels=sort(names(x_cushbr_coch_dip)))
dip_cushbr_pmf<-subset_samples(dip_ps, Site=="Policeman Flats" | Site=="Cushing Bridge")
deseq_cushbr_pmf_dip <- phyloseq_to_deseq2(dip_cushbr_pmf, ~ Site)
deseq_cushbr_pmf_dip$Site <-relevel(deseq_cushbr_pmf_dip$Site, "Policeman Flats") #Releveling to make Cushing Bridge be compared to Graves Bridge
deseq_cushbr_pmf_dip <- DESeq(deseq_cushbr_pmf_dip, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_pmf_dip <- results(deseq_cushbr_pmf_dip, cooksCutoff = FALSE)
res_deseq_cushbr_pmf_dip
alpha = 0.001
sigtab_cushbr_pmf_dip = res_deseq_cushbr_pmf_dip[which(res_deseq_cushbr_pmf_dip$padj < alpha), ]
sigtab_cushbr_pmf_dip = cbind(as(sigtab_cushbr_pmf_dip, "data.frame"), as(tax_table(dip_cushbr_pmf)[rownames(sigtab_cushbr_pmf_dip), ], "matrix"))
x_cushbr_pmf_dip = tapply(sigtab_cushbr_pmf_dip$log2FoldChange, sigtab_cushbr_pmf_dip$Phylum, function(x) max(x))
x_cushbr_pmf_dip = sort(x_cushbr_pmf_dip, TRUE)
sigtab_cushbr_pmf_dip$Phylum = factor(as.character(sigtab_cushbr_pmf_dip$Phylum), levels=names(x_cushbr_pmf_dip))
# Genus
x_cushbr_pmf_dip = tapply(sigtab_cushbr_pmf_dip$log2FoldChange, sigtab_cushbr_pmf_dip$Genus, function(x) max(x))
x_cushbr_pmf_dip = sort(x_cushbr_pmf_dip, TRUE)
sigtab_cushbr_pmf_dip$Genus = factor(as.character(sigtab_cushbr_pmf_dip$Genus), levels=sort(names(x_cushbr_pmf_dip)))
perl_ps<-subset_samples(sample_ps, Family=="Perlidae")
perl_cushbr_coch<-subset_samples(perl_ps, Site=="Cochrane" | Site=="Cushing Bridge")
deseq_cushbr_coch_perl <- phyloseq_to_deseq2(perl_cushbr_coch, ~ Site)
deseq_cushbr_coch_perl <- DESeq(deseq_cushbr_coch_perl, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_coch_perl <- results(deseq_cushbr_coch_perl, cooksCutoff = FALSE)
res_deseq_cushbr_coch_perl
alpha = 0.001
sigtab_cushbr_coch_perl = res_deseq_cushbr_coch_perl[which(res_deseq_cushbr_coch_perl$padj < alpha), ]
sigtab_cushbr_coch_perl = cbind(as(sigtab_cushbr_coch_perl, "data.frame"), as(tax_table(perl_cushbr_coch)[rownames(sigtab_cushbr_coch_perl), ], "matrix"))
x_cushbr_coch_perl = tapply(sigtab_cushbr_coch_perl$log2FoldChange, sigtab_cushbr_coch_perl$Phylum, function(x) max(x))
x_cushbr_coch_perl = sort(x_cushbr_coch_perl, TRUE)
sigtab_cushbr_coch_perl$Phylum = factor(as.character(sigtab_cushbr_coch_perl$Phylum), levels=names(x_cushbr_coch_perl))
# Genus
x_cushbr_coch_perl = tapply(sigtab_cushbr_coch_perl$log2FoldChange, sigtab_cushbr_coch_perl$Genus, function(x) max(x))
x_cushbr_coch_perl = sort(x_cushbr_coch_perl, TRUE)
sigtab_cushbr_coch_perl$Genus = factor(as.character(sigtab_cushbr_coch_perl$Genus), levels=sort(names(x_cushbr_coch_perl)))
perl_cushbr_pmf<-subset_samples(perl_ps, Site=="Policeman Flats" | Site=="Cushing Bridge")
deseq_cushbr_pmf_perl <- phyloseq_to_deseq2(perl_cushbr_pmf, ~ Site)
deseq_cushbr_pmf_perl$Site <-relevel(deseq_cushbr_pmf_perl$Site, "Policeman Flats") #Releveling to make Cushing Bridge be compared to Graves Bridge
deseq_cushbr_pmf_perl <- DESeq(deseq_cushbr_pmf_perl, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_pmf_perl <- results(deseq_cushbr_pmf_perl, cooksCutoff = FALSE)
res_deseq_cushbr_pmf_perl
alpha = 0.001
sigtab_cushbr_pmf_perl = res_deseq_cushbr_pmf_perl[which(res_deseq_cushbr_pmf_perl$padj < alpha), ]
sigtab_cushbr_pmf_perl = cbind(as(sigtab_cushbr_pmf_perl, "data.frame"), as(tax_table(perl_cushbr_pmf)[rownames(sigtab_cushbr_pmf_perl), ], "matrix"))
x_cushbr_pmf_perl = tapply(sigtab_cushbr_pmf_perl$log2FoldChange, sigtab_cushbr_pmf_perl$Phylum, function(x) max(x))
x_cushbr_pmf_perl = sort(x_cushbr_pmf_perl, TRUE)
sigtab_cushbr_pmf_perl$Phylum = factor(as.character(sigtab_cushbr_pmf_perl$Phylum), levels=names(x_cushbr_pmf_perl))
# Genus
x_cushbr_pmf_perl = tapply(sigtab_cushbr_pmf_perl$log2FoldChange, sigtab_cushbr_pmf_perl$Genus, function(x) max(x))
x_cushbr_pmf_perl = sort(x_cushbr_pmf_perl, TRUE)
sigtab_cushbr_pmf_perl$Genus = factor(as.character(sigtab_cushbr_pmf_perl$Genus), levels=sort(names(x_cushbr_pmf_perl)))
aran_ps<-subset_samples(sample_ps, Family=="Araneidae")
aran_cushbr_coch<-subset_samples(aran_ps, Site=="Cochrane" | Site=="Cushing Bridge")
deseq_cushbr_coch_aran <- phyloseq_to_deseq2(aran_cushbr_coch, ~ Site)
deseq_cushbr_coch_aran <- DESeq(deseq_cushbr_coch_aran, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_coch_aran <- results(deseq_cushbr_coch_aran, cooksCutoff = FALSE)
res_deseq_cushbr_coch_aran
alpha = 0.001
sigtab_cushbr_coch_aran = res_deseq_cushbr_coch_aran[which(res_deseq_cushbr_coch_aran$padj < alpha), ]
sigtab_cushbr_coch_aran = cbind(as(sigtab_cushbr_coch_aran, "data.frame"), as(tax_table(aran_cushbr_coch)[rownames(sigtab_cushbr_coch_aran), ], "matrix"))
x_cushbr_coch_aran = tapply(sigtab_cushbr_coch_aran$log2FoldChange, sigtab_cushbr_coch_aran$Phylum, function(x) max(x))
x_cushbr_coch_aran = sort(x_cushbr_coch_aran, TRUE)
sigtab_cushbr_coch_aran$Phylum = factor(as.character(sigtab_cushbr_coch_aran$Phylum), levels=names(x_cushbr_coch_aran))
# Genus
x_cushbr_coch_aran = tapply(sigtab_cushbr_coch_aran$log2FoldChange, sigtab_cushbr_coch_aran$Genus, function(x) max(x))
x_cushbr_coch_aran = sort(x_cushbr_coch_aran, TRUE)
sigtab_cushbr_coch_aran$Genus = factor(as.character(sigtab_cushbr_coch_aran$Genus), levels=sort(names(x_cushbr_coch_aran)))
aran_cushbr_sun<-subset_samples(aran_ps, Site=="Sunalta" | Site=="Cushing Bridge")
deseq_cushbr_sun_aran <- phyloseq_to_deseq2(aran_cushbr_sun, ~ Site)
deseq_cushbr_sun_aran <- DESeq(deseq_cushbr_sun_aran, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_sun_aran <- results(deseq_cushbr_sun_aran, cooksCutoff = FALSE)
res_deseq_cushbr_sun_aran
alpha = 0.001
sigtab_cushbr_sun_aran = res_deseq_cushbr_sun_aran[which(res_deseq_cushbr_sun_aran$padj < alpha), ]
sigtab_cushbr_sun_aran = cbind(as(sigtab_cushbr_sun_aran, "data.frame"), as(tax_table(aran_cushbr_sun)[rownames(sigtab_cushbr_sun_aran), ], "matrix"))
x_cushbr_sun_aran = tapply(sigtab_cushbr_sun_aran$log2FoldChange, sigtab_cushbr_sun_aran$Phylum, function(x) max(x))
x_cushbr_sun_aran = sort(x_cushbr_sun_aran, TRUE)
sigtab_cushbr_sun_aran$Phylum = factor(as.character(sigtab_cushbr_sun_aran$Phylum), levels=names(x_cushbr_sun_aran))
# Genus
x_cushbr_sun_aran = tapply(sigtab_cushbr_sun_aran$log2FoldChange, sigtab_cushbr_sun_aran$Genus, function(x) max(x))
x_cushbr_sun_aran = sort(x_cushbr_sun_aran, TRUE)
sigtab_cushbr_sun_aran$Genus = factor(as.character(sigtab_cushbr_sun_aran$Genus), levels=sort(names(x_cushbr_sun_aran)))
aran_cushbr_grvbr<-subset_samples(aran_ps, Site=="Graves Bridge" | Site=="Cushing Bridge")
deseq_cushbr_grvbr_aran <- phyloseq_to_deseq2(aran_cushbr_grvbr, ~ Site)
deseq_cushbr_grvbr_aran$Site <-relevel(deseq_cushbr_grvbr_aran$Site, "Graves Bridge") #Releveling to make Cushing Bridge be compared to Graves Bridge
deseq_cushbr_grvbr_aran <- DESeq(deseq_cushbr_grvbr_aran, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_grvbr_aran <- results(deseq_cushbr_grvbr_aran, cooksCutoff = FALSE)
res_deseq_cushbr_grvbr_aran
alpha = 0.001
sigtab_cushbr_grvbr_aran = res_deseq_cushbr_grvbr_aran[which(res_deseq_cushbr_grvbr_aran$padj < alpha), ]
sigtab_cushbr_grvbr_aran = cbind(as(sigtab_cushbr_grvbr_aran, "data.frame"), as(tax_table(aran_cushbr_grvbr)[rownames(sigtab_cushbr_grvbr_aran), ], "matrix"))
x_cushbr_grvbr_aran = tapply(sigtab_cushbr_grvbr_aran$log2FoldChange, sigtab_cushbr_grvbr_aran$Phylum, function(x) max(x))
x_cushbr_grvbr_aran = sort(x_cushbr_grvbr_aran, TRUE)
sigtab_cushbr_grvbr_aran$Phylum = factor(as.character(sigtab_cushbr_grvbr_aran$Phylum), levels=names(x_cushbr_grvbr_aran))
# Genus
x_cushbr_grvbr_aran = tapply(sigtab_cushbr_grvbr_aran$log2FoldChange, sigtab_cushbr_grvbr_aran$Genus, function(x) max(x))
x_cushbr_grvbr_aran = sort(x_cushbr_grvbr_aran, TRUE)
sigtab_cushbr_grvbr_aran$Genus = factor(as.character(sigtab_cushbr_grvbr_aran$Genus), levels=sort(names(x_cushbr_grvbr_aran)))
aran_cushbr_pmf<-subset_samples(aran_ps, Site=="Policeman Flats" | Site=="Cushing Bridge")
deseq_cushbr_pmf_aran <- phyloseq_to_deseq2(aran_cushbr_pmf, ~ Site)
deseq_cushbr_pmf_aran$Site <-relevel(deseq_cushbr_pmf_aran$Site, "Policeman Flats") #Releveling to make Cushing Bridge be compared to Graves Bridge
deseq_cushbr_pmf_aran <- DESeq(deseq_cushbr_pmf_aran, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_pmf_aran <- results(deseq_cushbr_pmf_aran, cooksCutoff = FALSE)
res_deseq_cushbr_pmf_aran
alpha = 0.001
sigtab_cushbr_pmf_aran = res_deseq_cushbr_pmf_aran[which(res_deseq_cushbr_pmf_aran$padj < alpha), ]
sigtab_cushbr_pmf_aran = cbind(as(sigtab_cushbr_pmf_aran, "data.frame"), as(tax_table(aran_cushbr_pmf)[rownames(sigtab_cushbr_pmf_aran), ], "matrix"))
x_cushbr_pmf_aran = tapply(sigtab_cushbr_pmf_aran$log2FoldChange, sigtab_cushbr_pmf_aran$Phylum, function(x) max(x))
x_cushbr_pmf_aran = sort(x_cushbr_pmf_aran, TRUE)
sigtab_cushbr_pmf_aran$Phylum = factor(as.character(sigtab_cushbr_pmf_aran$Phylum), levels=names(x_cushbr_pmf_aran))
# Genus
x_cushbr_pmf_aran = tapply(sigtab_cushbr_pmf_aran$log2FoldChange, sigtab_cushbr_pmf_aran$Genus, function(x) max(x))
x_cushbr_pmf_aran = sort(x_cushbr_pmf_aran, TRUE)
sigtab_cushbr_pmf_aran$Genus = factor(as.character(sigtab_cushbr_pmf_aran$Genus), levels=sort(names(x_cushbr_pmf_aran)))
tetra_ps<-subset_samples(sample_ps, Family=="Tetragnathidae")
tetra_cushbr_coch<-subset_samples(tetra_ps, Site=="Cochrane" | Site=="Cushing Bridge")
deseq_cushbr_coch_tetra <- phyloseq_to_deseq2(tetra_cushbr_coch, ~ Site)
deseq_cushbr_coch_tetra <- DESeq(deseq_cushbr_coch_tetra, test = "Wald", fitType = "parametric", sfType = "poscounts")
res_deseq_cushbr_coch_tetra <- results(deseq_cushbr_coch_tetra, cooksCutoff = FALSE)
res_deseq_cushbr_coch_tetra
alpha = 0.001
sigtab_cushbr_coch_tetra = res_deseq_cushbr_coch_tetra[which(res_deseq_cushbr_coch_tetra$padj < alpha), ]
sigtab_cushbr_coch_tetra = cbind(as(sigtab_cushbr_coch_tetra, "data.frame"), as(tax_table(tetra_cushbr_coch)[rownames(sigtab_cushbr_coch_tetra), ], "matrix"))
x_cushbr_coch_tetra = tapply(sigtab_cushbr_coch_tetra$log2FoldChange, sigtab_cushbr_coch_tetra$Phylum, function(x) max(x))
x_cushbr_coch_tetra = sort(x_cushbr_coch_tetra, TRUE)
sigtab_cushbr_coch_tetra$Phylum = factor(as.character(sigtab_cushbr_coch_tetra$Phylum), levels=names(x_cushbr_coch_tetra))
# Genus
x_cushbr_coch_tetra = tapply(sigtab_cushbr_coch_tetra$log2FoldChange, sigtab_cushbr_coch_tetra$Genus, function(x) max(x))
x_cushbr_coch_tetra = sort(x_cushbr_coch_tetra, TRUE)
sigtab_cushbr_coch_tetra$Genus = factor(as.character(sigtab_cushbr_coch_tetra$Genus), levels=sort(names(x_cushbr_coch_tetra)))
library(rjags)
library(MixSIAR)
library(plyr)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(R2WinBUGS)
library(FSA)
library(splancs)
library(devtools)
library(emmeans)
library(vegan)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis", force=TRUE)
library(pairwiseAdonis)
library(ggpubr)
isotope<-read.csv("C:\\Users\\Emilie\\Documents\\GitHub\\Bow-River-Microbiome-2022\\stable_isotope_analysis\\StableIsotope2022.csv")
isotope$Site<-factor(isotope$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
#isotope$Aqu_Terr<-factor(isotope$Aqu_Terr, levels=c("Leaves", "biofilm", "lar_aquatic", "Ad_aquatic", "Terrestrial", "Spider"), labels=c("Riparian Leaves", "Biofilm", "Aquatic Larvae", "Aquatic Adults", "Terrestrial Prey", "Spiders"))
inverts<-subset(isotope, Tissue.Type=="Whole Invertebrate")
filt_collec_coch<-subset(inverts, Site=="Cochrane" & FFG=="Filterer-Collector") #12
gath_collec_coch<-subset(inverts, Site=="Cochrane" & FFG=="Gatherer-Collector")
piercer_coch<-subset(inverts, Site=="Cochrane" & FFG=="Piercer") #3
scraper_coch<-subset(inverts, Site=="Cochrane" & FFG=="Scraper") #3
pred_coch<-subset(inverts, Site=="Cochrane" & FFG=="Predator")
#Sunalta
filt_collec_sun<-subset(inverts, Site=="Sunalta" & FFG=="Filterer-Collector") #4
gath_collec_sun<-subset(inverts, Site=="Sunalta" & FFG=="Gatherer-Collector") #3
piercer_sun<-subset(inverts, Site=="Sunalta" & FFG=="Piercer") #3
scraper_sun<-subset(inverts, Site=="Sunalta" & FFG=="Scraper") #3
pred_sun<-subset(inverts, Site=="Sunalta" & FFG=="Predator") #10
#Cushing Bridge
filt_collec_cush<-subset(inverts, Site=="Cushing Bridge" & FFG=="Filterer-Collector") #5
gath_collec_cush<-subset(inverts, Site=="Cushing Bridge" & FFG=="Gatherer-Collector") #3
piercer_cush<-subset(inverts, Site=="Cushing Bridge" & FFG=="Piercer") #3
scraper_cush<-subset(inverts, Site=="Cushing Bridge" & FFG=="Scraper") #4
pred_cush<-subset(inverts, Site=="Cushing Bridge" & FFG=="Predator") #15
#Graves Bridge
filt_collec_grvbr<-subset(inverts, Site=="Graves Bridge" & FFG=="Filterer-Collector") #3
gath_collec_grvbr<-subset(inverts, Site=="Graves Bridge" & FFG=="Gatherer-Collector") #7
piercer_grvbr<-subset(inverts, Site=="Graves Bridge" & FFG=="Piercer") #0
scraper_grvbr<-subset(inverts, Site=="Graves Bridge" & FFG=="Scraper") #3
pred_grvbr<-subset(inverts, Site=="Graves Bridge" & FFG=="Predator") #10
#Policeman Flats
filt_collec_pmf<-subset(inverts, Site=="Policeman Flats" & FFG=="Filterer-Collector") #6
gath_collec_pmf<-subset(inverts, Site=="Policeman Flats" & FFG=="Gatherer-Collector") #10
piercer_pmf<-subset(inverts, Site=="Policeman Flats" & FFG=="Piercer") #3
scraper_pmf<-subset(inverts, Site=="Policeman Flats" & FFG=="Scraper") #4
pred_pmf<-subset(inverts, Site=="Policeman Flats" & FFG=="Predator") #16
biofilm<-filter(isotope, Taxa=="Biofilm")
ggplot(biofilm, aes(x=Site, y=d13C))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
ggplot(biofilm, aes(x=Site, y=d15N))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm<-filter(rawdata, Tissue Type=="Biofilm") #15 obs (3 at 5 sites each)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #15 obs (3 at 5 sites each)
ggplot(biofilm_raw, aes(x=Site, y=d13C))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
ggplot(biofilm_raw, aes(x=Site, y=d13C))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
ggplot(biofilm_raw, aes(x=Site, y=d13C, color=SampleName))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
biofilm_raw<-filter(rawdata, Notes!="Acid treated") #34 obs
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes!="Acid treated") #34 obs
ggplot(biofilm_raw, aes(x=Site, y=d13C, color=SampleName))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes!="Acid treated") #19 obs
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()+
geom_smooth(method="lm")+
facet_grid(.~Site)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes!="Acid treated") #19 obs
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()+
facet_grid(.~Site)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes!="Acid treated") #18 obs
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()+
facet_grid(.~Site)
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes=="Duplicate") #18 obs
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes!="Acid treated") #18 obs
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()+
facet_grid(.~Site)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes!="Acid treated") #18 obs
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()
ggplot(biofilm_raw_no_HCl, aes(y=d13C, color=SampleName))+
geom_point()+
facet_grid(.~Site)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, color=SampleName))+
geom_point()
ggplot(biofilm_raw_no_HCl, aes(y=Site, x=d13C, color=SampleName))+
geom_point()
ggplot(biofilm_raw_no_HCl, aes(y=Site, x=d13C, shape=SampleName))+
geom_point()
View(biofilm_raw)
ggplot(biofilm_raw_no_HCl, aes(y=Site, x=d13C, label=SampleName))+
geom_point()
ggplot(biofilm_raw_no_HCl, aes(y=Site, x=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=0, vjust=0)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=0, vjust=0)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_label_repel(aes(label = Name),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
library(ggrepel)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_label_repel(aes(label = Name),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_label_repel(aes(label = SampleName),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_label_repel(aes(label = SampleName),
box.padding   = 0.2,
point.padding = 0.2,
segment.color = 'grey50')
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_label_repel(aes(label = SampleName),
box.padding   = 0.05,
point.padding = 0.05,
segment.color = 'grey50')
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_label_repel(aes(label = SampleName),
box.padding   = 0.01,
point.padding = 0.01,
segment.color = 'grey50')
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_label_repel(aes(label = SampleName),
box.padding   = 0.0001,
point.padding = 0.0001,
segment.color = 'grey50')
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d15N, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)
biofilm_raw_no_HCl$Site <-factor(biofilm_raw_no_HCl$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()
View(biofilm_raw_no_HCl)
rawdata<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\Isotopes\\SIN Lab Data\\Stable_Isotope_Raw_Data.csv")
biofilm_raw<-filter(rawdata, Tissue_Type=="Biofilm") #34 obs
biofilm_raw_no_HCl<-filter(biofilm_raw, Notes!="Acid treated") #18 obs
biofilm_raw_no_HCl$Site <-factor(biofilm_raw_no_HCl$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats"))
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()+
options(repr.plot.width=15, repr.plot.height=8)
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()+
annotate("text", x = 5, hjust = 1, y = 25, label = str_wrap(SampleName, 1))
p = ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()
p + annotate("text", x = 5, hjust = 1, y = 25, label = str_wrap(SampleName, 1))
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d15N, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d13C, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()
ggsave(filename="Figures/biofilm_raw_data.png")
getwd()
ggplot(biofilm_raw_no_HCl, aes(x=Site, y=d15N, label=SampleName))+
geom_point()+
geom_text(hjust=-0.1)+
theme_bw()
Bow_ps<-subset_samples(sample_ps, Stream_Type=="Bow River")
Bow_ps<-prune_taxa(taxa_sums(Bow_ps) > 0, Bow_ps)
Bow_glom = tax_glom(Bow_ps, "Phylum") %>% transform_sample_counts(function(x) {x * 100/sum(x)})
Bow_phy_prune<-prune_samples(sample_sums(Bow_glom)>2, Bow_glom)
Bow_phy_prune_df<-psmelt(Bow_phy_prune_df)
Bow_phy_prune_df<-psmelt(Bow_phy_prune)
View(Bow_phy_prune_df)
Bow_phylum <- psmelt(Bow_glom) %>%
as_tibble %>%
group_by(Phylum) %>%
dplyr::select(c("Abundance", "sample_Family", "Phylum")) %>%
summarize(Mean = mean(Abundance), SD = sd(Abundance)) %>%
ungroup
View(Bow_phylum)
Bow_ps<-subset_samples(sample_ps, Stream_Type=="Bow River")
Bow_ps<-prune_taxa(taxa_sums(Bow_ps) > 0, Bow_ps)
Bow_glom_phy = tax_glom(Bow_ps, "Phylum") %>% transform_sample_counts(function(x) {x * 100/sum(x)})
hydro_phy<-subset_samples(Bow_glom_phy, Family=="Hydropsychidae" | Stream_Type=="Bow River")
hydro_phy_Bow<-subset_samples(Bow_glom_phy, Family=="Hydropsychidae" | Stream_Type=="Bow River")
hydro_phy_Bow<-subset_samples(Bow_glom_phy, Family=="Hydropsychidae")
shapiro.test(hydro_phy_Bow$rel_abund)
hydro_phy_Bow_df<-psmelt(hydro_phy_Bow)
View(hydro_phy_Bow_df)
shapiro.test(hydro_phy_Bow$Abundance)
shapiro.test(hydro_phy_Bow_df$Abundance)
#Proteobacteria
proteo_hydro_Bow<-subset(hydro_phy_Bow_df, Phylum=="Proteobacteria")
kruskal.test(data=proteo_hydro_Bow, Abundance ~ Site) #p = 0.775 no diff.
Bow_phy_prune <- prune_taxa(taxa_sums(Bow_glom_phy) > 0.02, Bow_glom_phy)
Bow_phy_prune
hydro_phy_Bow<-subset_samples(Bow_glom_phy, Family=="Hydropsychidae")
hydro_phy_Bow_df<-psmelt(hydro_phy_Bow)
View(hydro_phy_Bow_df)
Bow_phy_prune <- prune_taxa(taxa_sums(Bow_glom_phy) > 10, Bow_glom_phy)
Bow_phy_prune
hydro_phy_Bow<-subset_samples(Bow_glom_phy, Family=="Hydropsychidae")
hydro_phy_Bow_df<-psmelt(hydro_phy_Bow)
hydro_phy_Bow<-prune_taxa(taxa_sums(hydro_phy_Bow) > 0, hydro_phy_Bow)
hydro_phy_Bow_df<-psmelt(hydro_phy_Bow)
shapiro.test(hydro_phy_Bow_df$Abundance) #Not normal
#Proteobacteria
proteo_hydro_Bow<-subset(hydro_phy_Bow_df, Phylum=="Proteobacteria")
kruskal.test(data=proteo_hydro_Bow, Abundance ~ Site) #p = 0.775 no diff.
#Listing the top abundant phyla
hydro_phy_Bow_df %>%
group_by(Phylum) %>%
dplyr::select(c("Abundance", "Phylum")) %>%
summarize(Mean = mean(Abundance), SD = sd(Abundance)) %>%
ungroup
#Listing the top abundant phyla
hydro_phy_Bow_df %>%
group_by(Phylum) %>%
dplyr::select(c("Abundance", "Phylum")) %>%
summarize(Mean = mean(Abundance), SD = sd(Abundance)) %>%
arrange(desc) %>%
ungroup
#Listing the top abundant phyla
hydro_phy_Bow_df %>%
group_by(Phylum) %>%
dplyr::select(c("Abundance", "Phylum")) %>%
summarize(Mean = mean(Abundance), SD = sd(Abundance)) %>%
arrange(desc(Abundance)) %>%
ungroup
#Listing the top abundant phyla
hydro_phy_Bow_df %>%
group_by(Phylum) %>%
dplyr::select(c("Abundance", "Phylum")) %>%
summarize(Mean = mean(Abundance), SD = sd(Abundance)) %>%
arrange(desc(Mean)) %>%
ungroup
#Bacteroidota
bactero_hydro_Bow<-subset(hydro_phy_Bow_df, Phylum=="Bacteroidota")
kruskal.test(data=bactero_hydro_Bow, Abundance ~ Site) #p = 0.775 no diff.
shapiro.test(bactero_hydro_Bow$Abundance)
leveneTest(data=bactero_hydro_Bow, Abundance ~ Site)
summary(aov(data=bactero_hydro_Bow, Abundance ~ Site)) #p = 0.631 no diff.
summary(anova(data=bactero_hydro_Bow, Abundance ~ Site, type=2)) #p = 0.894 no diff.
summary(Anova(data=bactero_hydro_Bow, Abundance ~ Site, type=2)) #p = 0.894 no diff.
Anova(data=bactero_hydro_Bow, Abundance ~ Site, type=2) #p = 0.894 no diff.
summary(aov(data=bactero_hydro_Bow, Abundance ~ Site)) #p = 0.894 no diff.
shapiro.test(proteo_hydro_Bow$Abundance) #p=0.343 normal
leveneTest(data=proteo_hydro_Bow, Abundance ~ Site) #p=0.054, normal
summary(aov(data=proteo_hydro_Bow, Abundance ~ Site)) #p = 0.775 no diff.
#Firmicutes
firm_hydro_Bow<-subset(hydro_phy_Bow_df, Phylum=="Firmicutes")
shapiro.test(firm_hydro_Bow$Abundance) #p=0.253 normal
leveneTest(data=firm_hydro_Bow, Abundance ~ Site) #p=0.2095, normal
summary(aov(data=firm_hydro_Bow, Abundance ~ Site)) #p = 0.819 no diff.
summary(firm_hydro<-aov(data=firm_hydro_Bow, Abundance ~ Site)) #p = 0.013 significant difference
TukeyHSD(firm_hydro)
#Deferribacterota
def_hydro_Bow<-subset(hydro_phy_Bow_df, Phylum=="Deferribacterota")
shapiro.test(def_hydro_Bow$Abundance) #p=0.100 normal
leveneTest(data=def_hydro_Bow, Abundance ~ Site) #p=0.748, normal
summary(def_hydro<-aov(data=firm_hydro_Bow, Abundance ~ Site)) #p = 0.013 significant difference
summary(def_hydro<-aov(data=def_hydro_Bow, Abundance ~ Site)) #p = 0.013 significant difference
summary(aov(data=def_hydro_Bow, Abundance ~ Site)) #p = 0.155 no diff
kruskal.test(data=def_hydro_Bow, Abundance ~ Site)
hep_phy_Bow<-subset_samples(Bow_glom_phy, Family=="Heptageniidae")
hep_phy_Bow<-prune_taxa(taxa_sums(hep_phy_Bow) > 0, hep_phy_Bow)
hep_phy_Bow_df<-psmelt(hep_phy_Bow)
shapiro.test(hep_phy_Bow_df$Abundance) #Not normal
#Listing the top abundant phyla
hep_phy_Bow_df %>%
group_by(Phylum) %>%
dplyr::select(c("Abundance", "Phylum")) %>%
summarize(Mean = mean(Abundance), SD = sd(Abundance)) %>%
arrange(desc(Mean)) %>%
ungroup
#Proteobacteria
proteo_hydro_Bow<-subset(hydro_phy_Bow_df, Phylum=="Proteobacteria")
shapiro.test(proteo_hydro_Bow$Abundance) #p=0.343 normal
#Proteobacteria
proteo_hep_Bow<-subset(hep_phy_Bow_df, Phylum=="Proteobacteria")
shapiro.test(proteo_hep_Bow$Abundance) #p=0.253 normal
leveneTest(data=proteo_hep_Bow, Abundance ~ Site) #p=0.054, normal
summary(aov(data=proteo_hep_Bow, Abundance ~ Site)) #p = 0.894 no diff.
kruskal.test(data=proteo_hep_Bow, Abundance ~ Site)
summary(proteo_hep<-aov(data=proteo_hep_Bow, Abundance ~ Site)) #p = 0.045 sig diff
TukeyHSD(proteo_hep)
#Firmicutes
firm_hep_Bow<-subset(hep_phy_Bow_df, Phylum=="Bacteroidota")
shapiro.test(firm_hep_Bow$Abundance) #p=0.343 normal
leveneTest(data=firm_hep_Bow, Abundance ~ Site) #p=0.054, normal
summary(aov(data=firm_hep_Bow, Abundance ~ Site)) #p = 0.894 no diff.
#Bacteroidota
bactero_hep_Bow<-subset(hep_phy_Bow_df, Phylum=="Bacteroidota")
shapiro.test(bactero_hep_Bow$Abundance) #p=0.343 normal
leveneTest(data=bactero_hep_Bow, Abundance ~ Site) #p=0.054, normal
summary(aov(data=bactero_hep_Bow, Abundance ~ Site)) #p = 0.894 no diff.
#Firmicutes
firm_hep_Bow<-subset(hep_phy_Bow_df, Phylum=="Firmimcutes")
shapiro.test(firm_hep_Bow$Abundance) #p=0.093 normal
leveneTest(data=firm_hep_Bow, Abundance ~ Site) #p=0.937, normal
#Firmicutes
firm_hep_Bow<-subset(hep_phy_Bow_df, Phylum=="Firmimcutes")
#Firmicutes
firm_hep_Bow<-subset(hep_phy_Bow_df, Phylum=="Firmicutes")
shapiro.test(firm_hep_Bow$Abundance) #p=0.093 normal
leveneTest(data=firm_hep_Bow, Abundance ~ Site) #p=0.937, normal
summary(aov(data=firm_hep_Bow, Abundance ~ Site)) #p = 0.398 no diff.
kruskal.test(data=firm_hep_Bow, Abundance ~ Site)
