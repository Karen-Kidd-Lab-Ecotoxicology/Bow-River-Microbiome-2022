knitr::opts_chunk$set(echo = TRUE)
setwd("Microbiome_ED")
library(phyloseq) #phyloseq will be the main package used for structuring microbiome data and diversity comparisons
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("Microbiome_ED")
library(phyloseq) #phyloseq will be the main package used for structuring microbiome data and diversity comparisons
library(ggplot2) #For creating graphs
library(dplyr) #Helps with data wrangling
library(cluster) #Used for cluster analyses
library(grid)
library(FSA)
library(multcomp)
library(MASS)
library(glmmTMB)
library(gridExtra)
library(vegan)
library(tidyverse) #data wrangling
library(ape)
library(microbiome) #For microbiome analyses
#if (!require("BiocManager", quietly = TRUE)) #Installing microbiome package
#install.packages("BiocManager")
#BiocManager::install("microbiome")
library(PERFect) #Permutation filtration for microbiome data. Used when comparing beta diversities across sites/locations.
#if(!requireNamespace("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("PERFect")
library(knitr) #For R Markdown knitting
library(kableExtra)
library(speedyseq)
#if (!requireNamespace("remotes", quietly = TRUE))
#install.packages("remotes")
#remotes::install_github("mikemc/speedyseq")
library(colorspace)
library(RColorBrewer)
library(picante)
library(ggpubr)
library(data.table)
#devtools::install_github("microsud/microbiomeutilities")
library(microbiomeutilities)
library(imsig)
library(phangorn) #For phylogenetic tree
library(metacoder)
library(tibble)
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("DESeq2")
library(DESeq2)
#Importing ASV table
ASVseq<-read.csv("ASV_data_2022_ED.csv")
#The row names have to be the ASV identifier (genetic barcode) in order for it to be read. The following lines of code are to re-organize the row names
n1 <- ASVseq$X #Currently the ASVs are being called "X" in the first column. We want them to be unnamed in the row names column
ASVseq <- ASVseq[,-1] #This removes the first column of the ASV dataframe
rownames(ASVseq) <- n1 #This moves the ASVs to the rownames column of the dataframe
ASVtable <- as.matrix(ASVseq) #must be a matrix so we convert to a matrix
#View(ASVtable) #The ASVs are now the row names
#Importing taxa table
taxonomy <-read.csv ("Taxonomy_ED.csv")
#Using the same steps as above with the ASV table to make the genetic barcode the rowname
n2 <- taxonomy$X
taxonomy <- taxonomy[,-1]
rownames(taxonomy) <- n2
taxa_table<-as.matrix(taxonomy) #Turn into a matrix
#View(taxa_table) #ASVs are now the row names
#Importing metadata file
metadata<-read.csv("metadata_ED.csv")
metadata$Site<-factor(metadata$Site, levels=c("Cochrane", "Sunalta", "Cushing Bridge", "Graves Bridge", "Policeman Flats", "BRR2", "PCR1", "PCR3")) #Order sites
#Need to make sample names as row names so we follow the same steps as above.
n3 <- metadata$Study_ID
# move names to row headings
metadata <- metadata[,-1]
rownames(metadata) <- n3
#View(metadata) #sample names are now row names
#Combining phyloseq object
ASVtable = otu_table(ASVtable, taxa_are_rows = TRUE) #Taxa are rows means that the ASVs of each identified microbe are the row names which we made sure was true
taxa_table = tax_table(taxa_table)
#Make sure the ASV table and taxa table are both matricies before trying to turn into phyloseq object
ps <- phyloseq(ASVtable, sample_data(metadata), taxa_table)
#Experimental Samples
psexp<-subset_samples(ps, Sample_Type == "Sample") #Removing ASVs where the abundance is 0 (after removing the blank samples)
psexp<-prune_taxa(taxa_sums(psexp) > 0, psexp)
psexp #30,221 taxa and 350 samples
#Removing Eukaryotes
ps0 <- subset_taxa(psexp, Kingdom != "Eukaryota")
ntaxa(psexp)-ntaxa(ps0) #Got rid of 39 ASVs
#Removing low confidence data (where phylum could not be assigned)
ps1<-subset_taxa(ps0, !is.na(Phylum) & !Phylum %in% c("","uncharacterized")) #Removes the phyla characterized as NA
ntaxa(ps0) - ntaxa(ps1) #Got rid of 393 ASVs
#Getting rid of singletons and doubletons
any(taxa_sums(ps1)>=2) #TRUE. Means there are ASVs with a sum of sequences less than 2 across all samples.
ps2 <- prune_taxa(taxa_sums(ps1) > 2, ps1) #Getting rid of singletons and doubletons. (Taxa that only showed up in one or two sequences across all samples)
any(taxa_sums(ps2) <2) #FALSE. Means they were removed.
ntaxa(ps1)- ntaxa(ps2) #Got rid of 3205 ASVs.
ps3 <- subset_samples(ps2, sample_sums(ps2) > 2000)
sample_ps <- prune_taxa(taxa_sums(ps3) > 5, ps3)
sample_ps<- prune_taxa(taxa_sums(sample_ps) > 0, sample_ps)
sample_ps #21 013 taxa instead of 26584. Removed 5571 ASVs.
#Blank samples
psbl<-subset_samples(ps, Sample_Type != "Sample") #Removing ASVs where the abundance is 0 (after removing the blank samples)
psbl<-prune_taxa(taxa_sums(psbl) > 0, psbl)
psbl
any(taxa_sums(psbl)>=2) #TRUE. Means there are ASVs with a sum of sequences less than 2 across all samples.
psbl0 <- prune_taxa(taxa_sums(psbl) > 2, psbl) #Getting rid of singletons and doubletons. (Taxa that only showed up in one or two sequences across all samples)
any(taxa_sums(psbl0) <2) #FALSE. Means they were removed.
ntaxa(psbl)- ntaxa(psbl0) #Got rid of 32 ASVs.
#How many bacterial taxa do we have/did we remove
ntaxa(psbl) #1294 before any filtering was done.
ntaxa(psbl0) #1262 after sum of reads less than 2 were removed (32 removed).
blank_ps <- prune_taxa(taxa_sums(psbl0) > 10, psbl0)
blank_ps<- prune_taxa(taxa_sums(blank_ps) > 0, blank_ps)
blank_ps #1047 taxa instead of 1294. Removed 247 ASVs in total. 13 samples
metadataPCA<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\BowRiverRProject\\Microbiome test data\\Victoria test data\\metadataPCAavg.csv", header=T)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
corr_matrix<-cor(metadataPCA)
corr_matrix
ggcorrplot(corr_matrix)
data.pca <- prcomp(metadataPCA[,-1], scale=TRUE)
summary(data.pca)
data.pca
loading.scores<-data.pca$rotation[,1:3]
loading.scores
fviz_eig(data.pca, addlabels = TRUE) #first three principal components explain most of the variation in the data
brstick = function(ev) {
# Broken stick model (MacArthur 1957)
n = length(ev)
bsm = data.frame(j=seq(1:n), p=0)
bsm$p[1] = 1/n
for (i in 2:n) bsm$p[i] = bsm$p[i-1] + (1/(n + 1 - i))
bsm$p = 100*bsm$p/n
# Plot eigenvalues and % of variation for each axis
op = par(mfrow=c(2,1),omi=c(0.1,0.3,0.1,0.1), mar=c(1, 1, 1, 1))
barplot(ev, main="Eigenvalues", col="bisque", las=2)
abline(h=mean(ev), col="red")
legend("topright", "Average eigenvalue", lwd=1, col=2, bty="n")
barplot(t(cbind(100*ev/sum(ev), bsm$p[n:1])), beside=TRUE,
main="% variation", col=c("bisque",2), las=2)
legend("topright", c("% eigenvalue", "Broken stick model"),
pch=15, col=c("bisque",2), bty="n")
par(op)
}
brstickmodel = data.pca$sdev^2
brstick(brstickmodel)
str(data.pca)
metadataPCA1<-cbind(metadataPCA, data.pca$x[,1:3])
metadataPCA1
#Correlation between variables and PCs
cor(metadataPCA[,-1], metadataPCA1[,9:11])
fviz_pca_var(data.pca, col.var = "black")
#Shows which variables are best represented by the three PCs.
fviz_cos2(data.pca, choice = "var", axes = 1:3)
fviz_pca_var(data.pca, col.var = "cos2",
gradient.cols = c("black", "orange", "green"),
repel = TRUE)
#Plotting the sites on the first 2 PCs
ggplot(metadataPCA1, aes(PC1, PC2))+
#stat_ellipse(geom="polygon", col="black", alpha=0.5)+
geom_text(aes(label=Site))+
theme_classic()
corr_matrix<-cor(metadataPCA)
corr_matrix<-cor(metadataPCA[,-1])
corr_matrix
ggcorrplot(corr_matrix)
knitr::opts_chunk$set(echo = TRUE)
citation(phyloseq)
reference(phyloseq)
citation("phyloseq")
knitr::opts_chunk$set(echo = TRUE)
setwd("Microbiome_ED")
library(phyloseq) #phyloseq will be the main package used for structuring microbiome data and diversity comparisons
library(ggplot2) #For creating graphs
library(dplyr) #Helps with data wrangling
library(cluster) #Used for cluster analyses
library(grid)
library(ape)
library(FSA)
library(multcomp)
library(MASS)
library(glmmTMB)
library(gridExtra)
library(vegan)
library(tidyverse) #data wrangling
library(microbiome) #For microbiome analyses
#if (!require("BiocManager", quietly = TRUE)) #Installing microbiome package
#install.packages("BiocManager")
#BiocManager::install("microbiome")
library(PERFect) #Permutation filtration for microbiome data. Used when comparing beta diversities across sites/locations.
#if(!requireNamespace("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("PERFect")
library(knitr) #For R Markdown knitting
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#Importing ASV table
ASVseq<-read.csv("C:\\Users\\Emilie\\Documents\\McMaster University 2022-2024\\Bow River Thesis\\BowRiverRProject\\Microbiome_ED\\ASV_data_2022_ED_fulldataset_samplesordered.csv")
knitr::opts_chunk$set(echo = TRUE)
library(rjags)
knitr::opts_chunk$set(echo = TRUE)
library(rjags)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
citation()
#install.packages("rlang")
library(rlang)
#install.packages("glue")
library(glue)
library(phyloseq) #phyloseq will be the main package used for structuring microbiome data and diversity comparisons
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#install.packages("viridis")
library(viridis)
#BiocManager::install("apeglm")
library(apeglm)
library(ggplot2) #For creating graphs
#install.packages("ggtext")
library(ggtext)
library(dplyr) #Helps with data wrangling
library(cluster) #Used for cluster analyses
library(grid)
library(ape)
library(FSA)
library(multcomp)
library(MASS)
library(glmmTMB)
library(gridExtra)
library(vegan)
library(tidyverse) #data wrangling
